//@version=5
// 根据vwma上下轨，结合rsi+1/2mfi参数的上下轨过滤，确定开平仓 位置

// bug：
// - longadd在shortclose之后，出错

// 重要优化：
// - short的dca没有写
// - 止盈改成atr/吊灯

// 优化：
// - 参数改成动态
// - numberOfDCAOrders应该直接计算出来

// 策略默认设置=======
strategy("VRM Strategy", 
   overlay=true, default_qty_type = strategy.cash,  initial_capital = 1000000, commission_type = strategy.commission.percent,  commission_value = 0.1  )

// 自定义颜色
var color COLOR_GREY = color.rgb(128, 223, 236, 61)
var color COLOR_WHITE = color.rgb(210, 210, 210)
var color COLOR_RED = color.rgb(128, 49, 49)
var color COLOR_YELLOW = color.rgb(170, 140, 40)
var color COLOR_GREEN = color.rgb(26, 155, 45, 30)

// 策略设置
float ChangePercentage = input.float(1.4, 'VRM系数(0-5)', group="策略设置")
float below = input(45, "下轨阈值(0-150)", group="策略设置")
float above = input(105, "上轨阈值(0-150)", group="策略设置")

// DCA设置
float addPercent = input.float(2.0, "DCA 加仓触发百分比 (%)", group="DCA设置", tooltip="价格下跌达到此比例时触发DCA加仓") / 100
float baseOrderAmount = input.float(100000, "基础订单金额 ($)", group="DCA设置")
float dcaMultiplier = input.float(1.5, "DCA 倍数", group="DCA设置", tooltip="每次加仓乘以倍数")
int numberOfDCAOrders = input.int(4, "DCA 订单数量", group="DCA设置", tooltip="最多加仓几次") + 1

// SL&TP设置
float takeProfitPercent = input.float(2.0, "止盈 (%)", group="SL&TP设置") / 100
float stopLossPercent = input.float(2.0, "止损 (%)", group="SL&TP设置") / 100

// 视觉设置
bool displayDealLines = input(true, "是否显示交易线", group="视觉设置")

// 初始化设置
var int addCounter = 1  // 加仓计数器
var float allqty = 0
var float lastDCAPrice = 0.0  // 记录上次 DCA 加仓的价格
var int totalLongTrades = 0
var int totalShortTrades = 0

// 1 交易信号
// 计算vwma数据
float core = ta.vwma(hlc3, 14)
float vwma_above = core * (1 + (ChangePercentage / 100))
float vwma_below = core * (1 - (ChangePercentage / 100))
// 计算rsi_mfi数据
float rsi = ta.rsi(close, 14)
float mfi = ta.mfi(hlc3, 14)
float rsi_mfi = math.abs(rsi + mfi / 2)

// 生成交易信号
bool longSignal = (low <= vwma_below) and (rsi_mfi < below)
bool shortSignal = (high >= vwma_above) and (rsi_mfi > above)

// 绘制VWMA、RSI_MFI、信号
plot(vwma_above, "VWMA上轨", color=COLOR_RED)
plot(vwma_below, "VWMA下轨", color=COLOR_GREEN)
// todo：加入rsi_mfi的线
plotshape(series=longSignal, location=location.belowbar, color=COLOR_GREEN, style=shape.labelup, text="LONG", textcolor= color.white)
plotshape(series=shortSignal, location=location.abovebar, color=COLOR_RED, style=shape.labeldown, text="SHORT", textcolor= color.white)

// 2 开仓与加仓逻辑
// 绘制盈亏标签
plotPNLLabel() =>
    message = ""
    message += "PNL: " + str.tostring(math.round((close - strategy.position_avg_price)*allqty, 2)) + ' ' + str.tostring(syminfo.currency) + "\n"
    message += "PNL%: " + str.tostring(math.round((close - strategy.position_avg_price)*allqty / strategy.equity * 100, 2)) + " %"
    label.new(bar_index + 1, y= high * 1.01, text=message, yloc=yloc.price, style=label.style_label_lower_left, textcolor=COLOR_WHITE, textalign=text.align_left, color=COLOR_YELLOW)

// 2.1 根据信号决定持仓
if longSignal and totalLongTrades == 0
    strategy.close(id="SHORT", comment="Close Short")
    strategy.order(id="LONG", direction=strategy.long, comment = "LongOpen " , qty = baseOrderAmount / close)
    lastDCAPrice := baseOrderAmount
    allqty := baseOrderAmount / close
    totalLongTrades := 1
    alert("新做多交易 {{ticker}}", freq=alert.freq_once_per_bar_close)

// 2.2 DCA加仓
if (longSignal and 
     totalLongTrades > 0 and 
     totalLongTrades < numberOfDCAOrders and 
     close <= strategy.position_avg_price * (1-addPercent))
    lastDCAPrice := lastDCAPrice * dcaMultiplier
    strategy.order(id="LONG", direction=strategy.long, comment = "LongAdd # " + str.tostring(addCounter), qty = lastDCAPrice / close)
    addCounter := addCounter + 1
    allqty := allqty + lastDCAPrice / close
    totalLongTrades := totalLongTrades + 1
    alert("新DCA加仓 {{ticker}}", freq=alert.freq_once_per_bar_close)

// 2.3 止盈与止损逻辑
if (totalLongTrades > 0)
    if shortSignal and strategy.openprofit >= strategy.equity * takeProfitPercent
        strategy.close(id="LONG", comment="Take Profit" + str.tostring(strategy.opentrades))
        alert("止盈平仓 {{ticker}}", freq=alert.freq_once_per_bar_close)
        addCounter := 1
        plotPNLLabel()
        totalLongTrades := 0
        // strategy.order(id="SHORT", direction=strategy.short, comment = "Short Open", qty = baseOrderAmount / close)
    
    else if shortSignal and strategy.openprofit <= strategy.equity * -stopLossPercent
        strategy.close(id="LONG", comment="Stop Loss" + str.tostring(strategy.opentrades) )
        alert("止损平仓 {{ticker}}", freq=alert.freq_once_per_bar_close)
        addCounter := 1
        totalLongTrades := 0
        // strategy.order(id="SHORT", direction=strategy.short, comment = "Short Open", qty = baseOrderAmount / close)
        plotPNLLabel()
    

// 绘制持仓成本、add加仓信号价格
plot(displayDealLines ? strategy.position_avg_price : na, title="持仓成本", color=COLOR_WHITE, style=plot.style_linebr)
plot(displayDealLines ? strategy.position_avg_price * (1 + addPercent) : na, title="加仓上线", color=COLOR_YELLOW, style=plot.style_linebr)
plot(displayDealLines ? strategy.position_avg_price * (1 - addPercent) : na, title="加仓下线", color=COLOR_YELLOW, style=plot.style_linebr)

// 3 右上角交易状态
// 查看是否已开仓
isOpenTrade() =>
    strategy.opentrades > 0 ? true : false

// 计算当前持仓的盈亏百分比
calcCurrentPNLPercentage() =>
    (close - strategy.position_avg_price) / close * 100

// 创建信息展示表格
var summary_table = table.new(position = position.top_right, columns = 2, rows = 4, frame_color = COLOR_GREY, frame_width = 1, border_width = 1)

// 填充表格函数
fillTable(summary_table) =>
    // 添加表头并设置样式
    table.cell(summary_table, 0, 0, text='VRM Strategy', text_color=COLOR_WHITE, bgcolor= COLOR_GREY)
    // 合并第一行的一二两列
    table.merge_cells(summary_table, 0, 0, 1, 0)
    // 交易状态
    table.cell(summary_table, 0, 1, text = '交易状态:',bgcolor = COLOR_GREY, text_color = COLOR_WHITE, text_size = size.small)
    table.cell(summary_table, 1, 1, text = str.tostring(math.round(strategy.openprofit, 2)) + ' ' + syminfo.currency, bgcolor = COLOR_GREY, text_color = COLOR_WHITE, text_size = size.small)
    // 当前本金
    table.cell(summary_table, 0, 2, text = "当前本金: ", bgcolor = COLOR_GREY, text_color = COLOR_WHITE, text_size = size.small)
    table.cell(summary_table, 1, 2, text = str.tostring(math.round(strategy.equity)) + ' ' + syminfo.currency, bgcolor = COLOR_GREY, text_color = COLOR_WHITE, text_size = size.small)
    // 总盈亏
    table.cell(summary_table, 0, 3, text = "总盈亏: ", bgcolor = COLOR_GREY, text_color = COLOR_WHITE, text_size = size.small)
    table.cell(summary_table, 1, 3, text = str.tostring(math.round(strategy.netprofit,2 )) + ' '  + syminfo.currency, bgcolor = COLOR_GREY, text_color = COLOR_WHITE, text_size = size.small)

if barstate.isconfirmed
    table.clear(summary_table, 1, 1, 1, 3)
    fillTable(summary_table)
